# Properties file last updated by TKWPropertiesEditor on Thu May 03 16:59:28 BST 2018
# TKS properties file
# Damian Murphy
# 20100901
#
# A name for this particular configuration, used for logging
#
tks.configname Autotest FHIR_Bars
#
# The name of the user or organisation, used for logging (should be set by the installer)
#
tks.username NHS Digital
#
# Do we listen for or send over TLS ?
#
tks.receivetls No
tks.sendtls No
#
# If we do, these govern the keystore and CA locations and access
#
tks.tls.truststore TKW_ROOT/config/ITK_Autotest/certs/tls.jks
tks.tls.trustpassword password
tks.tls.keystore TKW_ROOT/config/ITK_Autotest/certs/tls.jks
tks.tls.keystorepassword password
#
# Directory for the loggers
#
tks.logdir TKW_ROOT/config/FHIR_BaRS/autotest_config/autotest_logs
tks.savedmessages TKW_ROOT/config/ITK_Autotest/simulator_saved_messages
#
# Definitions needed by the simulator service itself. Listen on 0.0.0.0 for all available 
# interfaces. There is no "default" port, so one must be set.
#
# Acceptable transports are "HttpTransport", "MllpTransport", "SpineToolsTransport"
tks.transportlist HttpTransport
#
tks.HttpTransport.listenaddr 0.0.0.0
tks.HttpTransport.listenport 4000
#
# The adminlistenport and adminlistenaddr is used by the TKW MTH console for dynamic reconfiguration of the simulator ruleset
# and provision of the getuuid service
tks.HttpTransport.adminlistenaddr localhost
tks.HttpTransport.adminlistenport 8000
#
# full set of rules in this file
tks.rules.configuration.file TKW_ROOT/config/FHIR_BaRS/simulator_config/test_tks_rule_config.txt
#
# Properties for using the transmitter functions
#
# Acceptable transmitter modes are "Http" "Mllp" "SpineTools"
tks.transmitter.mode Http
tks.transmitter.source TKW_ROOT/config/FHIR_BaRS/transmitter_source
tks.sender.destination TKW_ROOT/config/FHIR_BaRS/transmitter_sent_messages
tks.transmitter.timetolive 600
tks.transmitter.nosend No
tks.transmitter.send.url http://127.0.0.1:5000/asyncsoap
tks.transmitter.replyto.url http://127.0.0.1:4000/asyncsoap
tks.transmitter.faultto.url http://127.0.0.1:4000/asyncsoap
tks.transmitter.includesigner No
#
#
# Validator config file, directories and check classes
#
tks.validator.config TKW_ROOT/config/FHIR_BaRS/validator_config/consumer_simulator_validator.conf
tks.validator.source TKW_ROOT/config/FHIR_BaRS/messages_for_validation
tks.validator.reports TKW_ROOT/config/FHIR_BaRS/validator_reports

#Override properties file(s) This configures the fhir validator
tks.external.properties TKW_ROOT/config/FHIR_BaRS/external_configs/tkw-x.bars.external.properties

# Validator FHIR Version
tks.validator.hapifhirvalidator.fhir.version R4

# Validation options - schema and schematron is no longer recommended
tks.validator.hapifhirvalidator.schemavalidate N
tks.validator.hapifhirvalidator.schematronvalidate N
# LenientErrorHandler logs any errors but does not abort parsing. By default this handler is used, and it logs errors at "warning" level. StrictErrorHandler throws a DataFormatException if any errors are detected.
tks.validator.hapifhirvalidator.strictparservalidation N
#switch to turn on/off terminology checking
tks.validator.hapifhirvalidator.noterminologychecks N
#Lowest report level. Allowable levels in ascending order are: INFORMATION, WARNING, ERROR, FATAL
tks.validator.hapifhirvalidator.minimumreportlevel INFORMATION
tks.validator.check.hapifhirvalidator uk.nhs.digital.mait.tkwx.tk.internalservices.validation.hapifhir.HapiFhirValidator
#
tks.transmitter.send.chunksize 0
#
tks.tls.servermutualauthentication No
tks.tls.clientmutualauthentication No
#
tks.HttpTransport.namelist getuuid
#
# And then the definitions needed by each of these (DO NOT REMOVE the BADURI)
#
# uuid generator
tks.HttpTransport.getuuid.class uk.nhs.digital.mait.tkwx.tk.handlers.HTTPGetUUIDHandler
tks.HttpTransport.getuuid.path /getuuid
#
# Classes implementing automated testing facilities
#
tks.classname.AutoTest uk.nhs.digital.mait.tkwx.tk.internalservices.AutoTestService
#
# Logfile retry parameters (retry up to the given number of times, waiting 
# the given number of milliseconds between each
#
tks.autotest.synchronous.log.retries 10
tks.autotest.synchronous.log.delay 3000
tks.autotest.asynchronous.log.retries 10
tks.autotest.asynchronous.log.delay 3000
#
tks.autotest.stoponfail No
tks.autotest.stopwhenscriptcompletes Yes
#
# Log directory
#
tks.autotest.root TKW_ROOT/config/FHIR_BaRS/autotest_config/auto_tests
#
tks.autotest.testfunction.delay uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.DelayFunction
#
# Pass/Fail checks
#
tks.autotest.passfail.httpaccepted uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpAccepted
tks.autotest.passfail.httpok uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpOK
tks.autotest.passfail.http500 uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.Http500
tks.autotest.passfail.synchronousxpath uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.SynchronousXPathAssertionPassFailCheck
tks.autotest.passfail.zerocontentlength uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpZeroContentLength
tks.autotest.passfail.or uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.OrPassFailCheck
tks.autotest.passfail.and uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.AndPassFailCheck
tks.autotest.passfail.not uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.NotPassFailCheck
tks.autotest.passfail.implies uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.ImpliesPassFailCheck
tks.autotest.passfail.nullresponse uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.NullResponse
tks.autotest.passfail.nullrequest uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.NullRequest
tks.autotest.passfail.httpheadercheck uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpHeaderCheck
tks.autotest.passfail.httpstatuscheck uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpStatusCheck
tks.autotest.passfail.httpheadercorrelationcheck uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.HttpHeaderCorrelationCheck
tks.autotest.passfail.synchronousxpathcorrelationcheck uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.passfailchecks.SynchronousXPathCorrelatorPassFailCheck
#
# Extractors
#
tks.autotest.extractor.xpathextractor uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.SingleRecordXpathResponseExtractor
#
# Datasources
#
tks.autotest.datasource.circularwritabletdv uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.CircularUpdatableOrderedPersistentFileDataSource
tks.autotest.datasource.flatwritabletdv uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.OnceThroughUpdatableOrderedPersistentFileDataSource
#
# CDA correlator added SCF 7/11/12
tks.correlator.BasicTrackingIdCorrelator.class uk.nhs.digital.mait.tkwx.tk.internalservices.testautomation.BasicTrackingIdCorrelator
#
# Period to wait for the simulator to receive any inf or bus acknowledgements from the SUT
tks.autotest.asynchronousacknowledgementsimulator.wait 5000
#
#File Locker used for autotest added RR 25/07/2013
tks.Toolkit.logfilelocker Yes
#
# BaRS map of pseudo interaction id against HTTP method for restful messages
#
tks.validator.interaction.map.urn\:nhs\:names\:services\:bars\:fhir\:rest\:read\:metadata GET ^.*metadata.*$
tks.validator.interaction.map.urn\:nhs\:names\:services\:bars\:fhir\:rest\:search\:slot GET ^.*Slot.*$
tks.validator.interaction.map.urn\:nhs\:names\:services\:bars\:fhir\:rest\:read\:appointment GET ^.*Appointment.*$
tks.validator.interaction.map.urn\:nhs\:names\:services\:bars\:fhir\:rest\:read\:messagedefinition GET ^.*MessageDefinition.*$
tks.validator.interaction.map.urn\:nhs\:names\:services\:bars\:fhir\:rest\:read\:servicerequest GET ^.*ServiceRequest.*$

tks.fhir.version R4
# check that its a message not restful no predicates this handles all posts for process message
tks.fhir.service.location ( if (/fhir:Bundle/fhir:entry/fhir:resource/fhir:MessageHeader) then concat('urn:nhs:names:services:bars:fhir:messaging:',/fhir:Bundle/fhir:entry/fhir:resource/fhir:MessageHeader/fhir:reason/fhir:coding/fhir:code/@value,':',/fhir:Bundle/fhir:entry/fhir:resource/fhir:MessageHeader/fhir:eventCoding/fhir:code/@value) else '' )

#Turn off the log signing so that the autotest folder is not cluttered
tks.skipsignlogs Y

# this applies to SingleRecordXpathResponseExtractor where a supplier is returning location url encoded
tks.url_decode.httpheaders Y
# END
